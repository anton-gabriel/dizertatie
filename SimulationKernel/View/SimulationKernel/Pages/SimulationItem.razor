@using DomainModel.SimulationKernel
@using SimulationKernel.Data

<div class="col-md-4">
  <div class="card mb-4 shadow-sm rounded-bottom">
    <div class="card-body">
      <div class="d-flex flex-row align-items-center">
        <div class="icon"> <img src="icons/task_white_36dp.svg" /> </div>
        <div class="ms-2 c-details">
          <span style="font-weight:bold;">@Data.Name</span><br />
          <span>@Data.CreationDate</span>
        </div>
      </div>
      <span class="badge @StatusClass(Data.Status) mb-2">@Data.Status</span>
      <div class="d-flex justify-content-between align-items-center">
        <div class="btn-group">
          <button type="button" class="btn btn-sm btn-outline-secondary">View</button>
        </div>
        <small class="text-muted">@($"{Data.Duration?.Minutes}m {Data.Duration?.Seconds}s")</small>
      </div>
    </div>
  </div>
</div>

@code {
  [Parameter]
  public SimulationMetadata Data { get; set; } = SimulationMetadata.Empty;

  private string StatusClass(ProcessingStatus status)
  {
      switch (status)
      {
        case ProcessingStatus.NotStarted:
          return "alert-secondary";
        case ProcessingStatus.Processing:
          return "alert-info";
        case ProcessingStatus.Completed:
          return "alert-success";
        default:
          return "alert-secondary";
      }
  }
}
